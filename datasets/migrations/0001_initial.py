# Generated by Django 2.1 on 2019-01-13 19:55

import datasets.utils.BaseDatasetModel
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcrisRealLegal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recordtype', models.TextField(blank=True, db_index=True, null=True)),
                ('borough', models.SmallIntegerField(blank=True, null=True)),
                ('block', models.IntegerField(blank=True, null=True)),
                ('lot', models.IntegerField(blank=True, null=True)),
                ('easement', models.BooleanField(blank=True, null=True)),
                ('partiallot', models.TextField(blank=True, null=True)),
                ('airrights', models.BooleanField(blank=True, null=True)),
                ('subterraneanrights', models.BooleanField(blank=True, null=True)),
                ('propertytype', models.TextField(blank=True, null=True)),
                ('streetnumber', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField(blank=True, null=True)),
                ('unit', models.TextField(blank=True, null=True)),
                ('goodthroughdate', models.DateTimeField(blank=True, db_index=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='AcrisRealMaster',
            fields=[
                ('documentid', models.TextField(primary_key=True, serialize=False)),
                ('recordtype', models.TextField(blank=True, db_index=True, null=True)),
                ('crfn', models.TextField(blank=True, null=True)),
                ('borough', models.TextField(blank=True, null=True)),
                ('doctype', models.TextField(blank=True, null=True)),
                ('docdate', models.DateTimeField(blank=True, null=True)),
                ('docamount', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('recordedfiled', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modifieddate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('reelyear', models.SmallIntegerField(blank=True, null=True)),
                ('reelnbr', models.IntegerField(blank=True, null=True)),
                ('reelpage', models.IntegerField(blank=True, null=True)),
                ('pcttransferred', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('goodthroughdate', models.DateTimeField(blank=True, db_index=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='AcrisRealParty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recordtype', models.TextField(blank=True, null=True)),
                ('partytype', models.SmallIntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('address1', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('goodthroughdate', models.DateTimeField(blank=True, null=True)),
                ('documentid', models.ForeignKey(db_column='documentid', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.AcrisRealMaster')),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('bin', models.TextField(primary_key=True, serialize=False)),
                ('boro', models.TextField()),
                ('block', models.TextField()),
                ('lot', models.TextField()),
                ('lhnd', models.TextField()),
                ('lhns', models.TextField(blank=True, null=True)),
                ('lcontpar', models.TextField(blank=True, null=True)),
                ('lsos', models.TextField(blank=True, null=True)),
                ('hhnd', models.TextField()),
                ('hhns', models.TextField(blank=True, null=True)),
                ('hcontpar', models.TextField(blank=True, null=True)),
                ('hsos', models.TextField(blank=True, null=True)),
                ('scboro', models.TextField(blank=True, null=True)),
                ('sc5', models.IntegerField(blank=True, null=True)),
                ('sclgc', models.TextField(blank=True, null=True)),
                ('stname', models.TextField(blank=True, null=True)),
                ('addrtype', models.TextField(blank=True, null=True)),
                ('realb7sc', models.TextField(blank=True, null=True)),
                ('validlgcs', models.TextField(blank=True, null=True)),
                ('dapsflag', models.TextField(blank=True, null=True)),
                ('naubflag', models.TextField(blank=True, null=True)),
                ('parity', models.TextField(blank=True, null=True)),
                ('b10sc', models.BigIntegerField(blank=True, null=True)),
                ('segid', models.IntegerField(blank=True, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('physicalid', models.IntegerField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='CoreSubsidyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fcsubsidyid', models.BigIntegerField(blank=True, null=True)),
                ('agencysuppliedid1', models.TextField(blank=True, null=True)),
                ('agencysuppliedid2', models.TextField(blank=True, null=True)),
                ('agencyname', models.TextField(blank=True, null=True)),
                ('regulatorytool', models.TextField(blank=True, null=True)),
                ('programname', models.TextField(blank=True, db_index=True, null=True)),
                ('projectname', models.TextField(blank=True, null=True)),
                ('preservation', models.TextField(blank=True, db_index=True, null=True)),
                ('tenure', models.TextField(blank=True, db_index=True, null=True)),
                ('startdate', models.DateTimeField(blank=True, null=True)),
                ('enddate', models.DateTimeField(blank=True, null=True)),
                ('reacscore', models.TextField(blank=True, null=True)),
                ('reacdate', models.DateTimeField(blank=True, null=True)),
                ('cdid', models.SmallIntegerField(blank=True, null=True)),
                ('ccdid', models.SmallIntegerField(blank=True, null=True)),
                ('pumaid', models.SmallIntegerField(blank=True, null=True)),
                ('tract10id', models.BigIntegerField(blank=True, null=True)),
                ('boroname', models.TextField(blank=True, null=True)),
                ('cdname', models.TextField(blank=True, null=True)),
                ('ccdname', models.TextField(blank=True, null=True)),
                ('pumaname', models.TextField(blank=True, null=True)),
                ('assessedvalue', models.BigIntegerField(blank=True, db_index=True, null=True)),
                ('yearbuilt', models.SmallIntegerField(blank=True, null=True)),
                ('ownername', models.TextField(blank=True, null=True)),
                ('resunits', models.SmallIntegerField(blank=True, null=True)),
                ('standardaddress', models.TextField(blank=True, null=True)),
                ('buildings', models.SmallIntegerField(blank=True, null=True)),
                ('serviolation2017', models.SmallIntegerField(blank=True, null=True)),
                ('taxdelinquency2016', models.SmallIntegerField(blank=True, null=True)),
                ('dataoutputdate', models.DateTimeField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='Council',
            fields=[
                ('coundist', models.IntegerField(primary_key=True, serialize=False)),
                ('shapearea', models.DecimalField(blank=True, decimal_places=10, max_digits=24, null=True)),
                ('shapelength', models.DecimalField(blank=True, decimal_places=10, max_digits=24, null=True)),
                ('geometry', django.contrib.postgres.fields.jsonb.JSONField()),
                ('council_member_name', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='DOBComplaint',
            fields=[
                ('complaintnumber', models.IntegerField(primary_key=True, serialize=False)),
                ('status', models.TextField(blank=True, db_index=True, null=True)),
                ('dateentered', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('housenumber', models.TextField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('housestreet', models.TextField(blank=True, null=True)),
                ('communityboard', models.IntegerField(blank=True, null=True)),
                ('specialdistrict', models.TextField(blank=True, null=True)),
                ('complaintcategory', models.TextField(blank=True, null=True)),
                ('unit', models.TextField(blank=True, null=True)),
                ('dispositiondate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('dispositioncode', models.TextField(blank=True, db_index=True, null=True)),
                ('inspectiondate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('dobrundate', models.DateTimeField(blank=True, null=True)),
                ('bin', models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building')),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='DOBPermitFiledLegacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.TextField()),
                ('jobs1no', models.TextField()),
                ('doc', models.TextField(blank=True, null=True)),
                ('borough', models.TextField(blank=True, null=True)),
                ('house', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField(blank=True, null=True)),
                ('block', models.TextField(blank=True, null=True)),
                ('lot', models.TextField(blank=True, null=True)),
                ('jobtype', models.TextField(blank=True, null=True)),
                ('jobstatus', models.TextField(blank=True, null=True)),
                ('jobstatusdescrp', models.TextField(blank=True, null=True)),
                ('latestactiondate', models.DateTimeField(blank=True, null=True)),
                ('buildingtype', models.TextField(blank=True, null=True)),
                ('communityboard', models.TextField(blank=True, null=True)),
                ('cluster', models.TextField(blank=True, null=True)),
                ('landmarked', models.TextField(blank=True, null=True)),
                ('adultestab', models.TextField(blank=True, null=True)),
                ('loftboard', models.TextField(blank=True, null=True)),
                ('cityowned', models.TextField(blank=True, null=True)),
                ('littlee', models.TextField(blank=True, null=True)),
                ('pcfiled', models.TextField(blank=True, null=True)),
                ('efilingfiled', models.TextField(blank=True, null=True)),
                ('plumbing', models.TextField(blank=True, null=True)),
                ('mechanical', models.TextField(blank=True, null=True)),
                ('boiler', models.TextField(blank=True, null=True)),
                ('fuelburning', models.TextField(blank=True, null=True)),
                ('fuelstorage', models.TextField(blank=True, null=True)),
                ('standpipe', models.TextField(blank=True, null=True)),
                ('sprinkler', models.TextField(blank=True, null=True)),
                ('firealarm', models.TextField(blank=True, null=True)),
                ('equipment', models.TextField(blank=True, null=True)),
                ('firesuppression', models.TextField(blank=True, null=True)),
                ('curbcut', models.TextField(blank=True, null=True)),
                ('other', models.TextField(blank=True, null=True)),
                ('otherdescription', models.TextField(blank=True, null=True)),
                ('applicantsfirstname', models.TextField(blank=True, null=True)),
                ('applicantslastname', models.TextField(blank=True, null=True)),
                ('applicantprofessionaltitle', models.TextField(blank=True, null=True)),
                ('applicantlicense', models.TextField(blank=True, null=True)),
                ('professionalcert', models.TextField(blank=True, null=True)),
                ('prefilingdate', models.DateTimeField(blank=True, null=True)),
                ('paid', models.TextField(blank=True, null=True)),
                ('fullypaid', models.TextField(blank=True, null=True)),
                ('assigned', models.TextField(blank=True, null=True)),
                ('approved', models.TextField(blank=True, null=True)),
                ('fullypermitted', models.TextField(blank=True, null=True)),
                ('initialcost', models.TextField(blank=True, null=True)),
                ('totalestfee', models.TextField(blank=True, null=True)),
                ('feestatus', models.TextField(blank=True, null=True)),
                ('existingzoningsqft', models.IntegerField(blank=True, null=True)),
                ('proposedzoningsqft', models.IntegerField(blank=True, null=True)),
                ('horizontalenlrgmt', models.IntegerField(blank=True, null=True)),
                ('verticalenlrgmt', models.IntegerField(blank=True, null=True)),
                ('enlargementsqfootage', models.IntegerField(blank=True, null=True)),
                ('streetfrontage', models.IntegerField(blank=True, null=True)),
                ('existingnoofstories', models.IntegerField(blank=True, null=True)),
                ('proposednoofstories', models.IntegerField(blank=True, null=True)),
                ('existingheight', models.IntegerField(blank=True, null=True)),
                ('proposedheight', models.IntegerField(blank=True, null=True)),
                ('existingdwellingunits', models.IntegerField(blank=True, null=True)),
                ('proposeddwellingunits', models.IntegerField(blank=True, null=True)),
                ('existingoccupancy', models.TextField(blank=True, null=True)),
                ('proposedoccupancy', models.TextField(blank=True, null=True)),
                ('sitefill', models.TextField(blank=True, null=True)),
                ('zoningdist1', models.TextField(blank=True, null=True)),
                ('zoningdist2', models.TextField(blank=True, null=True)),
                ('zoningdist3', models.TextField(blank=True, null=True)),
                ('specialdistrict1', models.TextField(blank=True, null=True)),
                ('specialdistrict2', models.TextField(blank=True, null=True)),
                ('ownertype', models.TextField(blank=True, null=True)),
                ('nonprofit', models.TextField(blank=True, null=True)),
                ('ownersfirstname', models.TextField(blank=True, null=True)),
                ('ownerslastname', models.TextField(blank=True, null=True)),
                ('ownersbusinessname', models.TextField(blank=True, null=True)),
                ('ownershousenumber', models.TextField(blank=True, null=True)),
                ('ownershousestreetname', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('ownersphone', models.TextField(blank=True, null=True)),
                ('jobdescription', models.TextField(blank=True, null=True)),
                ('dobrundate', models.DateTimeField(blank=True, null=True)),
                ('totalconstructionfloorarea', models.TextField(blank=True, null=True)),
                ('withdrawalflag', models.TextField(blank=True, null=True)),
                ('signoffdate', models.DateTimeField(blank=True, null=True)),
                ('specialactionstatus', models.TextField(blank=True, null=True)),
                ('specialactiondate', models.DateTimeField(blank=True, null=True)),
                ('buildingclass', models.TextField(blank=True, null=True)),
                ('jobnogoodcount', models.TextField(blank=True, null=True)),
                ('gislatitude', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('gislongitude', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('giscouncildistrict', models.TextField(blank=True, null=True)),
                ('giscensustract', models.TextField(blank=True, null=True)),
                ('gisntaname', models.TextField(blank=True, null=True)),
                ('gisbin', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='DOBPermitIssuedLegacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.TextField()),
                ('permitsino', models.TextField()),
                ('borough', models.TextField(blank=True, null=True)),
                ('house', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField(blank=True, null=True)),
                ('jobdoc', models.TextField(blank=True, null=True)),
                ('jobtype', models.TextField(blank=True, db_index=True, null=True)),
                ('selfcert', models.TextField(blank=True, null=True)),
                ('block', models.TextField(blank=True, null=True)),
                ('lot', models.TextField(blank=True, null=True)),
                ('communityboard', models.TextField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('bldgtype', models.TextField(blank=True, null=True)),
                ('residential', models.TextField(blank=True, db_index=True, null=True)),
                ('specialdistrict1', models.TextField(blank=True, null=True)),
                ('specialdistrict2', models.TextField(blank=True, null=True)),
                ('worktype', models.TextField(blank=True, null=True)),
                ('permitstatus', models.TextField(blank=True, db_index=True, null=True)),
                ('filingstatus', models.TextField(blank=True, db_index=True, null=True)),
                ('permittype', models.TextField(blank=True, null=True)),
                ('permitsequence', models.TextField(blank=True, null=True)),
                ('permitsubtype', models.TextField(blank=True, null=True)),
                ('oilgas', models.TextField(blank=True, null=True)),
                ('sitefill', models.TextField(blank=True, null=True)),
                ('filingdate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('issuancedate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('expirationdate', models.DateTimeField(blank=True, null=True)),
                ('jobstartdate', models.DateTimeField(blank=True, null=True)),
                ('permitteesfirstname', models.TextField(blank=True, null=True)),
                ('permitteeslastname', models.TextField(blank=True, null=True)),
                ('permitteesbusinessname', models.TextField(blank=True, null=True)),
                ('permitteesphone', models.TextField(blank=True, null=True)),
                ('permitteeslicensetype', models.TextField(blank=True, null=True)),
                ('permitteeslicense', models.TextField(blank=True, null=True)),
                ('actassuperintendent', models.TextField(blank=True, null=True)),
                ('permitteesothertitle', models.TextField(blank=True, null=True)),
                ('hiclicense', models.TextField(blank=True, null=True)),
                ('sitesafetymgrsfirstname', models.TextField(blank=True, null=True)),
                ('sitesafetymgrslastname', models.TextField(blank=True, null=True)),
                ('sitesafetymgrbusinessname', models.TextField(blank=True, null=True)),
                ('superintendentfirstlastname', models.TextField(blank=True, null=True)),
                ('superintendentbusinessname', models.TextField(blank=True, null=True)),
                ('ownersbusinesstype', models.TextField(blank=True, null=True)),
                ('nonprofit', models.TextField(blank=True, null=True)),
                ('ownersbusinessname', models.TextField(blank=True, null=True)),
                ('ownersfirstname', models.TextField(blank=True, null=True)),
                ('ownerslastname', models.TextField(blank=True, null=True)),
                ('ownershouse', models.TextField(blank=True, null=True)),
                ('ownershousestreetname', models.TextField(blank=True, null=True)),
                ('ownershousecity', models.TextField(blank=True, null=True)),
                ('ownershousestate', models.TextField(blank=True, null=True)),
                ('ownershousezipcode', models.TextField(blank=True, null=True)),
                ('ownersphone', models.TextField(blank=True, null=True)),
                ('dobrundate', models.DateTimeField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('councildistrict', models.TextField(blank=True, null=True)),
                ('censustract', models.TextField(blank=True, null=True)),
                ('ntaname', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='DOBPermitIssuedNow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobfilingnumber', models.TextField(blank=True, null=True)),
                ('workpermit', models.TextField(blank=True, null=True)),
                ('filingreason', models.TextField(blank=True, null=True)),
                ('houseno', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField(blank=True, null=True)),
                ('borough', models.TextField(blank=True, null=True)),
                ('lot', models.IntegerField(blank=True, null=True)),
                ('block', models.IntegerField(blank=True, null=True)),
                ('cbno', models.TextField(blank=True, null=True)),
                ('aptcondonos', models.TextField(blank=True, null=True)),
                ('workonfloor', models.TextField(blank=True, null=True)),
                ('worktype', models.TextField(blank=True, null=True)),
                ('permitteeslicensetype', models.TextField(blank=True, null=True)),
                ('applicantlicense', models.TextField(blank=True, null=True)),
                ('applicantfirstname', models.TextField(blank=True, null=True)),
                ('applicantmiddlename', models.TextField(blank=True, null=True)),
                ('applicantlastname', models.TextField(blank=True, null=True)),
                ('applicantbusinessname', models.TextField(blank=True, null=True)),
                ('applicantbusinessaddress', models.TextField(blank=True, null=True)),
                ('filingrepresentativefirstname', models.TextField(blank=True, null=True)),
                ('filingrepresentativemiddleinitial', models.TextField(blank=True, null=True)),
                ('filingrepresentativelastname', models.TextField(blank=True, null=True)),
                ('filingrepresentativebusinessname', models.TextField(blank=True, null=True)),
                ('approveddate', models.DateTimeField(blank=True, null=True)),
                ('issueddate', models.DateTimeField(blank=True, null=True)),
                ('expireddate', models.DateTimeField(blank=True, null=True)),
                ('jobdescription', models.TextField(blank=True, null=True)),
                ('estimatedjobcosts', models.TextField(blank=True, null=True)),
                ('ownerbusinessname', models.TextField(blank=True, null=True)),
                ('ownername', models.TextField(blank=True, null=True)),
                ('ownerstreetaddress', models.TextField(blank=True, null=True)),
                ('ownercity', models.TextField(blank=True, null=True)),
                ('ownerstate', models.TextField(blank=True, null=True)),
                ('ownerzipcode', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='DOBViolation',
            fields=[
                ('isndobbisviol', models.TextField(primary_key=True, serialize=False)),
                ('boro', models.TextField(blank=True, null=True)),
                ('block', models.TextField(blank=True, null=True)),
                ('lot', models.TextField(blank=True, null=True)),
                ('issuedate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('violationtypecode', models.TextField(blank=True, db_index=True, null=True)),
                ('violationnumber', models.TextField(blank=True, null=True)),
                ('housenumber', models.TextField(blank=True, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('dispositiondate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('dispositioncomments', models.TextField(blank=True, null=True)),
                ('devicenumber', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('ecbnumber', models.TextField(blank=True, db_index=True, null=True)),
                ('number', models.TextField(blank=True, null=True)),
                ('violationcategory', models.TextField(blank=True, db_index=True, null=True)),
                ('violationtype', models.TextField(blank=True, db_index=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='ECBViolation',
            fields=[
                ('ecbviolationnumber', models.TextField(primary_key=True, serialize=False)),
                ('ecbviolationstatus', models.TextField(blank=True, db_index=True, null=True)),
                ('dobviolationnumber', models.TextField(blank=True, null=True)),
                ('boro', models.TextField(blank=True, null=True)),
                ('block', models.TextField(blank=True, null=True)),
                ('lot', models.TextField(blank=True, null=True)),
                ('hearingdate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('hearingtime', models.TextField(blank=True, null=True)),
                ('serveddate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('issuedate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('severity', models.TextField(blank=True, null=True)),
                ('violationtype', models.TextField(blank=True, db_index=True, null=True)),
                ('respondentname', models.TextField(blank=True, null=True)),
                ('respondenthousenumber', models.TextField(blank=True, null=True)),
                ('respondentstreet', models.TextField(blank=True, null=True)),
                ('respondentcity', models.TextField(blank=True, null=True)),
                ('respondentzip', models.TextField(blank=True, null=True)),
                ('violationdescription', models.TextField(blank=True, null=True)),
                ('penalityimposed', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=8, null=True)),
                ('amountpaid', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('balancedue', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('infractioncode1', models.TextField(blank=True, null=True)),
                ('sectionlawdescription1', models.TextField(blank=True, null=True)),
                ('infractioncode2', models.TextField(blank=True, null=True)),
                ('sectionlawdescription2', models.TextField(blank=True, null=True)),
                ('infractioncode3', models.TextField(blank=True, null=True)),
                ('sectionlawdescription3', models.TextField(blank=True, null=True)),
                ('infractioncode4', models.TextField(blank=True, null=True)),
                ('sectionlawdescription4', models.TextField(blank=True, null=True)),
                ('infractioncode5', models.TextField(blank=True, null=True)),
                ('sectionlawdescription5', models.TextField(blank=True, null=True)),
                ('infractioncode6', models.TextField(blank=True, null=True)),
                ('sectionlawdescription6', models.TextField(blank=True, null=True)),
                ('infractioncode7', models.TextField(blank=True, null=True)),
                ('sectionlawdescription7', models.TextField(blank=True, null=True)),
                ('infractioncode8', models.TextField(blank=True, null=True)),
                ('sectionlawdescription8', models.TextField(blank=True, null=True)),
                ('infractioncode9', models.TextField(blank=True, null=True)),
                ('sectionlawdescription9', models.TextField(blank=True, null=True)),
                ('infractioncode10', models.TextField(blank=True, null=True)),
                ('sectionlawdescription10', models.TextField(blank=True, null=True)),
                ('aggravatedlevel', models.TextField(blank=True, null=True)),
                ('hearingstatus', models.TextField(blank=True, null=True)),
                ('certificationstatus', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='Eviction',
            fields=[
                ('courtindex', models.TextField(primary_key=True, serialize=False)),
                ('boro', models.TextField(blank=True, null=True)),
                ('docketnumber', models.TextField(blank=True, null=True)),
                ('evictionaddress', models.TextField(blank=True, null=True)),
                ('apt', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('uniqueid', models.TextField(blank=True, null=True)),
                ('executeddate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('marshalfirstname', models.TextField(blank=True, null=True)),
                ('marshallastname', models.TextField(blank=True, null=True)),
                ('evictiontype', models.TextField(blank=True, db_index=True, null=True)),
                ('scheduledstatus', models.TextField(blank=True, db_index=True, null=True)),
                ('cleanedaddress1', models.TextField(blank=True, null=True)),
                ('cleanedaddress2', models.TextField(blank=True, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('geocoder', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='HousingLitigation',
            fields=[
                ('litigationid', models.IntegerField(primary_key=True, serialize=False)),
                ('boro', models.SmallIntegerField(blank=True, null=True)),
                ('housenumber', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('block', models.SmallIntegerField(blank=True, null=True)),
                ('lot', models.IntegerField(blank=True, null=True)),
                ('casetype', models.TextField(blank=True, null=True)),
                ('caseopendate', models.DateTimeField(blank=True, null=True)),
                ('casestatus', models.TextField(blank=True, null=True)),
                ('openjudgement', models.TextField(blank=True, null=True)),
                ('findingofharassment', models.TextField(blank=True, null=True)),
                ('findingdate', models.DateTimeField(blank=True, null=True)),
                ('penalty', models.TextField(blank=True, null=True)),
                ('respondent', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=16, null=True)),
                ('communitydistrict', models.TextField(blank=True, null=True)),
                ('councildistrict', models.TextField(blank=True, null=True)),
                ('censustract', models.TextField(blank=True, null=True)),
                ('nta', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='HPDBuildingRecord',
            fields=[
                ('buildingid', models.IntegerField(primary_key=True, serialize=False)),
                ('boroid', models.IntegerField(blank=True, null=True)),
                ('boro', models.TextField(blank=True, null=True)),
                ('housenumber', models.TextField(blank=True, null=True)),
                ('lowhousenumber', models.TextField(blank=True, null=True)),
                ('highhousenumber', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('block', models.SmallIntegerField(blank=True, null=True)),
                ('lot', models.IntegerField(blank=True, null=True)),
                ('communityboard', models.IntegerField(blank=True, null=True)),
                ('censustract', models.TextField(blank=True, null=True)),
                ('managementprogram', models.TextField(blank=True, null=True)),
                ('dobbuildingclassid', models.IntegerField(blank=True, null=True)),
                ('dobbuildingclass', models.TextField(blank=True, null=True)),
                ('legalstories', models.IntegerField(blank=True, null=True)),
                ('legalclassa', models.IntegerField(blank=True, null=True)),
                ('legalclassb', models.IntegerField(blank=True, null=True)),
                ('lifecycle', models.TextField(blank=True, null=True)),
                ('recordstatusid', models.IntegerField(blank=True, null=True)),
                ('recordstatus', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='HPDComplaint',
            fields=[
                ('complaintid', models.IntegerField(primary_key=True, serialize=False)),
                ('boroughid', models.IntegerField(blank=True, null=True)),
                ('borough', models.TextField(blank=True, null=True)),
                ('housenumber', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('block', models.IntegerField(blank=True, null=True)),
                ('lot', models.IntegerField(blank=True, null=True)),
                ('apartment', models.TextField(blank=True, null=True)),
                ('communityboard', models.IntegerField(blank=True, null=True)),
                ('receiveddate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('statusid', models.IntegerField(blank=True, db_index=True, null=True)),
                ('status', models.TextField(blank=True, db_index=True, null=True)),
                ('statusdate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('problemid', models.IntegerField(blank=True, db_index=True, null=True)),
                ('unittypeid', models.SmallIntegerField(blank=True, null=True)),
                ('unittype', models.TextField(blank=True, null=True)),
                ('spacetypeid', models.SmallIntegerField(blank=True, null=True)),
                ('spacetype', models.TextField(blank=True, null=True)),
                ('typeid', models.SmallIntegerField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('majorcategoryid', models.SmallIntegerField(blank=True, null=True)),
                ('majorcategory', models.TextField(blank=True, null=True)),
                ('minorcategoryid', models.SmallIntegerField(blank=True, null=True)),
                ('minorcategory', models.TextField(blank=True, null=True)),
                ('codeid', models.SmallIntegerField(blank=True, null=True)),
                ('code', models.TextField(blank=True, null=True)),
                ('statusdescription', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='HPDContact',
            fields=[
                ('registrationcontactid', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.TextField(blank=True, null=True)),
                ('contactdescription', models.TextField(blank=True, null=True)),
                ('corporationname', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('firstname', models.TextField(blank=True, null=True)),
                ('middleinitial', models.TextField(blank=True, null=True)),
                ('lastname', models.TextField(blank=True, null=True)),
                ('businesshousenumber', models.TextField(blank=True, null=True)),
                ('businessstreetname', models.TextField(blank=True, null=True)),
                ('businessapartment', models.TextField(blank=True, null=True)),
                ('businesscity', models.TextField(blank=True, null=True)),
                ('businessstate', models.TextField(blank=True, null=True)),
                ('businesszip', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='HPDRegistration',
            fields=[
                ('registrationid', models.IntegerField(primary_key=True, serialize=False)),
                ('boroid', models.SmallIntegerField(blank=True, null=True)),
                ('boro', models.TextField(blank=True, null=True)),
                ('housenumber', models.TextField(blank=True, null=True)),
                ('lowhousenumber', models.TextField(blank=True, null=True)),
                ('highhousenumber', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField(blank=True, null=True)),
                ('streetcode', models.IntegerField(blank=True, null=True)),
                ('zip', models.TextField(blank=True, null=True)),
                ('block', models.SmallIntegerField(blank=True, null=True)),
                ('lot', models.IntegerField(blank=True, null=True)),
                ('communityboard', models.IntegerField(blank=True, null=True)),
                ('lastregistrationdate', models.DateTimeField(blank=True, null=True)),
                ('registrationenddate', models.DateTimeField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='HPDViolation',
            fields=[
                ('violationid', models.IntegerField(primary_key=True, serialize=False)),
                ('registrationid', models.IntegerField(blank=True, null=True)),
                ('boroid', models.TextField(blank=True, null=True)),
                ('borough', models.TextField(db_index=True)),
                ('housenumber', models.TextField()),
                ('lowhousenumber', models.TextField(blank=True, null=True)),
                ('highhousenumber', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField()),
                ('streetcode', models.TextField(blank=True, null=True)),
                ('postcode', models.TextField(blank=True, null=True)),
                ('apartment', models.TextField(blank=True, null=True)),
                ('story', models.TextField(blank=True, null=True)),
                ('block', models.TextField(blank=True, null=True)),
                ('lot', models.TextField(blank=True, null=True)),
                ('class_name', models.TextField(blank=True, null=True)),
                ('inspectiondate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('approveddate', models.DateTimeField(blank=True, null=True)),
                ('originalcertifybydate', models.DateTimeField(blank=True, null=True)),
                ('originalcorrectbydate', models.DateTimeField(blank=True, null=True)),
                ('newcertifybydate', models.DateTimeField(blank=True, null=True)),
                ('newcorrectbydate', models.DateTimeField(blank=True, null=True)),
                ('certifieddate', models.DateTimeField(blank=True, null=True)),
                ('ordernumber', models.TextField(blank=True, null=True)),
                ('novid', models.IntegerField(blank=True, null=True)),
                ('novdescription', models.TextField(blank=True, null=True)),
                ('novissueddate', models.DateTimeField(blank=True, null=True)),
                ('currentstatusid', models.SmallIntegerField(db_index=True)),
                ('currentstatus', models.TextField(db_index=True)),
                ('currentstatusdate', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('novtype', models.TextField(blank=True, null=True)),
                ('violationstatus', models.TextField(blank=True, db_index=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True)),
                ('communityboard', models.TextField(blank=True, null=True)),
                ('councildistrict', models.SmallIntegerField(blank=True, null=True)),
                ('censustract', models.TextField(blank=True, null=True)),
                ('nta', models.TextField(blank=True, null=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('bbl', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('borough', models.TextField(blank=True, null=True)),
                ('block', models.TextField(blank=True, null=True)),
                ('lot', models.TextField(blank=True, null=True)),
                ('cd', models.SmallIntegerField(blank=True, null=True)),
                ('ct2010', models.TextField(blank=True, null=True)),
                ('cb2010', models.TextField(blank=True, null=True)),
                ('schooldist', models.SmallIntegerField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('firecomp', models.TextField(blank=True, null=True)),
                ('policeprct', models.TextField(blank=True, null=True)),
                ('healthcenterdistrict', models.SmallIntegerField(blank=True, null=True)),
                ('healtharea', models.TextField(blank=True, null=True)),
                ('sanitboro', models.TextField(blank=True, null=True)),
                ('sanitdistrict', models.SmallIntegerField(blank=True, null=True)),
                ('sanitsub', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('original_address', models.TextField(blank=True, null=True)),
                ('zonedist1', models.TextField(blank=True, null=True)),
                ('zonedist2', models.TextField(blank=True, null=True)),
                ('zonedist3', models.TextField(blank=True, null=True)),
                ('zonedist4', models.TextField(blank=True, null=True)),
                ('overlay1', models.TextField(blank=True, null=True)),
                ('overlay2', models.TextField(blank=True, null=True)),
                ('spdist1', models.TextField(blank=True, null=True)),
                ('spdist2', models.TextField(blank=True, null=True)),
                ('spdist3', models.TextField(blank=True, null=True)),
                ('ltdheight', models.TextField(blank=True, null=True)),
                ('splitzone', models.BooleanField(blank=True, null=True)),
                ('bldgclass', models.TextField(blank=True, db_index=True, null=True)),
                ('landuse', models.SmallIntegerField(blank=True, null=True)),
                ('easements', models.TextField(blank=True, null=True)),
                ('ownertype', models.TextField(blank=True, null=True)),
                ('ownername', models.TextField(blank=True, null=True)),
                ('lotarea', models.BigIntegerField(blank=True, null=True)),
                ('bldgarea', models.BigIntegerField(blank=True, null=True)),
                ('comarea', models.BigIntegerField(blank=True, null=True)),
                ('resarea', models.BigIntegerField(blank=True, null=True)),
                ('officearea', models.BigIntegerField(blank=True, null=True)),
                ('retailarea', models.BigIntegerField(blank=True, null=True)),
                ('garagearea', models.BigIntegerField(blank=True, null=True)),
                ('strgearea', models.BigIntegerField(blank=True, null=True)),
                ('factryarea', models.BigIntegerField(blank=True, null=True)),
                ('otherarea', models.BigIntegerField(blank=True, null=True)),
                ('areasource', models.TextField(blank=True, null=True)),
                ('numbldgs', models.IntegerField(blank=True, db_index=True, null=True)),
                ('numfloors', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=8, null=True)),
                ('unitsres', models.IntegerField(db_index=True)),
                ('unitstotal', models.IntegerField(db_index=True)),
                ('lotfront', models.DecimalField(blank=True, decimal_places=3, max_digits=32, null=True)),
                ('lotdepth', models.DecimalField(blank=True, decimal_places=3, max_digits=32, null=True)),
                ('bldgfront', models.DecimalField(blank=True, decimal_places=3, max_digits=32, null=True)),
                ('bldgdepth', models.DecimalField(blank=True, decimal_places=3, max_digits=32, null=True)),
                ('ext', models.TextField(blank=True, null=True)),
                ('proxcode', models.TextField(blank=True, null=True)),
                ('irrlotcode', models.BooleanField(blank=True, null=True)),
                ('lottype', models.TextField(blank=True, null=True)),
                ('bsmtcode', models.TextField(blank=True, null=True)),
                ('assessland', models.BigIntegerField(blank=True, null=True)),
                ('assesstot', models.BigIntegerField(blank=True, null=True)),
                ('exemptland', models.BigIntegerField(blank=True, null=True)),
                ('exempttot', models.BigIntegerField(blank=True, null=True)),
                ('yearbuilt', models.SmallIntegerField(blank=True, db_index=True, null=True)),
                ('yearalter1', models.SmallIntegerField(blank=True, null=True)),
                ('yearalter2', models.SmallIntegerField(blank=True, null=True)),
                ('histdist', models.TextField(blank=True, null=True)),
                ('landmark', models.TextField(blank=True, null=True)),
                ('builtfar', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=8, null=True)),
                ('residfar', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=8, null=True)),
                ('commfar', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=8, null=True)),
                ('facilfar', models.DecimalField(blank=True, db_index=True, decimal_places=2, max_digits=8, null=True)),
                ('borocode', models.TextField(blank=True, db_index=True, null=True)),
                ('condono', models.TextField(blank=True, null=True)),
                ('tract2010', models.TextField(blank=True, null=True)),
                ('xcoord', models.IntegerField(blank=True, null=True)),
                ('ycoord', models.IntegerField(blank=True, null=True)),
                ('zonemap', models.TextField(blank=True, null=True)),
                ('zmcode', models.TextField(blank=True, null=True)),
                ('sanborn', models.TextField(blank=True, null=True)),
                ('taxmap', models.TextField(blank=True, null=True)),
                ('edesignum', models.TextField(blank=True, null=True)),
                ('appbbl', models.TextField(blank=True, db_index=True, null=True)),
                ('appdate', models.DateTimeField(blank=True, null=True)),
                ('plutomapid', models.TextField(blank=True, null=True)),
                ('firm07flag', models.TextField(blank=True, null=True)),
                ('pfirm15flag', models.TextField(blank=True, null=True)),
                ('version', models.TextField(blank=True, db_index=True, null=True)),
                ('lng', models.DecimalField(blank=True, decimal_places=16, max_digits=32, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=16, max_digits=32, null=True)),
                ('council', models.ForeignKey(db_column='council', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Council')),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='RentStabilizationRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borough', models.TextField(blank=True, null=True)),
                ('uc2007', models.IntegerField(blank=True, null=True)),
                ('est2007', models.BooleanField(blank=True, null=True)),
                ('dhcr2007', models.BooleanField(blank=True, null=True)),
                ('abat2007', models.TextField(blank=True, null=True)),
                ('uc2008', models.IntegerField(blank=True, null=True)),
                ('est2008', models.BooleanField(blank=True, null=True)),
                ('dhcr2008', models.BooleanField(blank=True, null=True)),
                ('abat2008', models.TextField(blank=True, null=True)),
                ('uc2009', models.IntegerField(blank=True, null=True)),
                ('est2009', models.BooleanField(blank=True, null=True)),
                ('dhcr2009', models.BooleanField(blank=True, null=True)),
                ('abat2009', models.TextField(blank=True, null=True)),
                ('uc2010', models.IntegerField(blank=True, null=True)),
                ('est2010', models.BooleanField(blank=True, null=True)),
                ('dhcr2010', models.BooleanField(blank=True, null=True)),
                ('abat2010', models.TextField(blank=True, null=True)),
                ('uc2011', models.IntegerField(blank=True, null=True)),
                ('est2011', models.BooleanField(blank=True, null=True)),
                ('dhcr2011', models.BooleanField(blank=True, null=True)),
                ('abat2011', models.TextField(blank=True, null=True)),
                ('uc2012', models.IntegerField(blank=True, null=True)),
                ('est2012', models.BooleanField(blank=True, null=True)),
                ('dhcr2012', models.BooleanField(blank=True, null=True)),
                ('abat2012', models.TextField(blank=True, null=True)),
                ('uc2013', models.IntegerField(blank=True, null=True)),
                ('est2013', models.BooleanField(blank=True, null=True)),
                ('dhcr2013', models.BooleanField(blank=True, null=True)),
                ('abat2013', models.TextField(blank=True, null=True)),
                ('uc2014', models.IntegerField(blank=True, null=True)),
                ('est2014', models.BooleanField(blank=True, null=True)),
                ('dhcr2014', models.BooleanField(blank=True, null=True)),
                ('abat2014', models.TextField(blank=True, null=True)),
                ('uc2015', models.IntegerField(blank=True, null=True)),
                ('est2015', models.BooleanField(blank=True, null=True)),
                ('dhcr2015', models.BooleanField(blank=True, null=True)),
                ('abat2015', models.TextField(blank=True, null=True)),
                ('uc2016', models.IntegerField(blank=True, null=True)),
                ('est2016', models.BooleanField(blank=True, null=True)),
                ('dhcr2016', models.BooleanField(blank=True, null=True)),
                ('abat2016', models.TextField(blank=True, null=True)),
                ('uc2017', models.IntegerField(blank=True, null=True)),
                ('est2017', models.BooleanField(blank=True, null=True)),
                ('dhcr2017', models.BooleanField(blank=True, null=True)),
                ('abat2017', models.TextField(blank=True, null=True)),
                ('uc2018', models.IntegerField(blank=True, null=True)),
                ('est2018', models.BooleanField(blank=True, null=True)),
                ('dhcr2018', models.BooleanField(blank=True, null=True)),
                ('abat2018', models.TextField(blank=True, null=True)),
                ('uc2019', models.IntegerField(blank=True, null=True)),
                ('est2019', models.BooleanField(blank=True, null=True)),
                ('dhcr2019', models.BooleanField(blank=True, null=True)),
                ('abat2019', models.TextField(blank=True, null=True)),
                ('uc2020', models.IntegerField(blank=True, null=True)),
                ('est2020', models.BooleanField(blank=True, null=True)),
                ('dhcr2020', models.BooleanField(blank=True, null=True)),
                ('abat2020', models.TextField(blank=True, null=True)),
                ('cd', models.SmallIntegerField(blank=True, null=True)),
                ('ct2010', models.TextField(blank=True, null=True)),
                ('cb2010', models.TextField(blank=True, null=True)),
                ('council', models.IntegerField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('ownername', models.TextField(blank=True, null=True)),
                ('numbldgs', models.SmallIntegerField(blank=True, null=True)),
                ('numfloors', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('unitsres', models.IntegerField(blank=True, null=True)),
                ('unitstotal', models.IntegerField(blank=True, null=True)),
                ('yearbuilt', models.SmallIntegerField(blank=True, null=True)),
                ('condono', models.SmallIntegerField(blank=True, null=True)),
                ('lon', models.DecimalField(blank=True, decimal_places=16, max_digits=32, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=16, max_digits=32, null=True)),
                ('ucbbl', models.ForeignKey(blank=True, db_column='ucbbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property', unique=True)),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='Subsidy451a',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borough', models.SmallIntegerField(blank=True, null=True)),
                ('neighborhood', models.TextField(blank=True, null=True)),
                ('buildingclasscategory', models.TextField(blank=True, null=True)),
                ('taxclassatpresent', models.TextField(blank=True, null=True)),
                ('block', models.IntegerField(blank=True, null=True)),
                ('lot', models.IntegerField(blank=True, null=True)),
                ('buildingclassatpresent', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('residentialunits', models.SmallIntegerField(blank=True, null=True)),
                ('commercialunits', models.SmallIntegerField(blank=True, null=True)),
                ('totalunits', models.SmallIntegerField(blank=True, null=True)),
                ('landsquarefeet', models.IntegerField(blank=True, null=True)),
                ('grosssquarefeet', models.IntegerField(blank=True, null=True)),
                ('yearbuilt', models.SmallIntegerField(blank=True, db_index=True, null=True)),
                ('bbl', models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property')),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='SubsidyJ51',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borough', models.SmallIntegerField(blank=True, null=True)),
                ('neighborhood', models.TextField(blank=True, null=True)),
                ('buildingclasscategory', models.TextField(blank=True, null=True)),
                ('taxclassatpresent', models.TextField(blank=True, null=True)),
                ('block', models.IntegerField(blank=True, null=True)),
                ('lot', models.IntegerField(blank=True, null=True)),
                ('buildingclassatpresent', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('residentialunits', models.SmallIntegerField(blank=True, null=True)),
                ('commercialunits', models.SmallIntegerField(blank=True, null=True)),
                ('totalunits', models.SmallIntegerField(blank=True, null=True)),
                ('landsquarefeet', models.IntegerField(blank=True, null=True)),
                ('grosssquarefeet', models.IntegerField(blank=True, null=True)),
                ('yearbuilt', models.SmallIntegerField(blank=True, db_index=True, null=True)),
                ('bbl', models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property')),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.CreateModel(
            name='TaxLien',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borough', models.TextField(blank=True, null=True)),
                ('block', models.TextField(blank=True, null=True)),
                ('lot', models.TextField(blank=True, null=True)),
                ('taxclasscode', models.TextField(blank=True, null=True)),
                ('buildingclass', models.TextField(blank=True, null=True)),
                ('communityboard', models.TextField(blank=True, null=True)),
                ('councildistrict', models.TextField(blank=True, null=True)),
                ('housenumber', models.TextField(blank=True, null=True)),
                ('streetname', models.TextField(blank=True, null=True)),
                ('zipcode', models.TextField(blank=True, null=True)),
                ('waterdebtonly', models.TextField(blank=True, null=True)),
                ('bbl', models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property')),
            ],
            bases=(datasets.utils.BaseDatasetModel.BaseDatasetModel, models.Model),
        ),
        migrations.AddField(
            model_name='hpdviolation',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='hpdviolation',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building'),
        ),
        migrations.AddField(
            model_name='hpdviolation',
            name='buildingid',
            field=models.ForeignKey(blank=True, db_column='buildingid', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.HPDBuildingRecord'),
        ),
        migrations.AddField(
            model_name='hpdregistration',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='hpdregistration',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building'),
        ),
        migrations.AddField(
            model_name='hpdregistration',
            name='buildingid',
            field=models.ForeignKey(blank=True, db_column='buildingid', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.HPDBuildingRecord'),
        ),
        migrations.AddField(
            model_name='hpdcontact',
            name='registrationid',
            field=models.ForeignKey(db_column='registrationid', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.HPDRegistration'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='hpdcomplaint',
            name='buildingid',
            field=models.ForeignKey(blank=True, db_column='buildingid', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.HPDBuildingRecord'),
        ),
        migrations.AddField(
            model_name='hpdbuildingrecord',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='hpdbuildingrecord',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building'),
        ),
        migrations.AddField(
            model_name='hpdbuildingrecord',
            name='registrationid',
            field=models.ForeignKey(db_column='registrationid', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.HPDRegistration'),
        ),
        migrations.AddField(
            model_name='housinglitigation',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='housinglitigation',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building'),
        ),
        migrations.AddField(
            model_name='housinglitigation',
            name='buildingid',
            field=models.ForeignKey(blank=True, db_column='buildingid', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.HPDBuildingRecord'),
        ),
        migrations.AddField(
            model_name='eviction',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='ecbviolation',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='ecbviolation',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building'),
        ),
        migrations.AddField(
            model_name='ecbviolation',
            name='isndobbisextract',
            field=models.ForeignKey(db_column='isndobbisextract', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.DOBViolation'),
        ),
        migrations.AddField(
            model_name='dobviolation',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='dobviolation',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building'),
        ),
        migrations.AddField(
            model_name='dobpermitissuednow',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='dobpermitissuednow',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building'),
        ),
        migrations.AddField(
            model_name='dobpermitissuedlegacy',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='dobpermitissuedlegacy',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building'),
        ),
        migrations.AddField(
            model_name='dobpermitfiledlegacy',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='dobpermitfiledlegacy',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Building'),
        ),
        migrations.AddField(
            model_name='coresubsidyrecord',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='building',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='acrisreallegal',
            name='bbl',
            field=models.ForeignKey(db_column='bbl', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.Property'),
        ),
        migrations.AddField(
            model_name='acrisreallegal',
            name='documentid',
            field=models.ForeignKey(db_column='documentid', db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.AcrisRealMaster'),
        ),
        migrations.AlterUniqueTogether(
            name='dobpermitissuednow',
            unique_together={('jobfilingnumber', 'workpermit', 'issueddate')},
        ),
        migrations.AlterUniqueTogether(
            name='dobpermitissuedlegacy',
            unique_together={('job', 'permitsino')},
        ),
        migrations.AlterUniqueTogether(
            name='dobpermitfiledlegacy',
            unique_together={('job', 'jobs1no')},
        ),
    ]
